---
const { id, initialCount = 0 } = Astro.props;
const endpoint = import.meta.env.PUBLIC_VOTE_ENDPOINT ?? "/api/vote";
---
<button
  class="group inline-flex items-center gap-2 rounded-full border-4 border-ink bg-white px-4 py-2 text-xs font-bold uppercase tracking-[0.3em] text-ink transition hover:-translate-y-1"
  data-id={id}
  data-count={initialCount}
  type="button"
>
  <span class="rounded-full bg-fuchsia-500 px-2 py-1 text-ink">â–²</span>
  <span class="vote-count" aria-live="polite" role="status">{initialCount}</span>
</button>
<script is:inline>
  const endpoint = {JSON.stringify(endpoint)};
  const script = document.currentScript;
  const button = script?.previousElementSibling;

  if (button instanceof HTMLButtonElement) {
    const updateCount = (next: number) => {
      button.dataset.count = String(next);
      const countEl = button.querySelector<HTMLElement>(".vote-count");
      if (countEl) countEl.textContent = String(next);
    };

    button.addEventListener("click", async () => {
      if (button.disabled) return;

      const id = button.dataset.id ?? "unknown";
      const count = Number(button.dataset.count ?? "0");
      const next = count + 1;
      updateCount(next);

      button.disabled = true;
      button.setAttribute("aria-busy", "true");

      try {
        await fetch(endpoint, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id }),
        });
      } catch (error) {
        console.error("Vote error", error);
        updateCount(count);
      } finally {
        button.disabled = false;
        button.removeAttribute("aria-busy");
      }
    });
  }
</script>
