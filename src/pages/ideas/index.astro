---
import BaseLayout from "@layouts/BaseLayout.astro";
---
<BaseLayout
  title="CURATIONS Ideas"
  description="Crowdsourced feature and program requests with live upvoting."
>
  <section class="border-b-4 border-ink bg-ink text-sand">
    <div class="mx-auto max-w-5xl px-6 py-16">
      <h1 class="font-display text-5xl uppercase tracking-[0.35em]">Idea Submission</h1>
      <p class="mt-4 max-w-3xl text-sm leading-relaxed text-sand/80">
        Drop your requests, collaborations, or vibe-heavy experiments. Upvotes are powered by Cloudflare Workers + KV so ideas can
        trend in real time.
      </p>
    </div>
  </section>

  <section class="mx-auto max-w-5xl px-6 py-12">
    <div id="ideas-container" class="grid gap-8">
      <div class="loading-state text-center py-8">
        <p class="text-ink/60">Loading ideas...</p>
      </div>
      <!-- Dynamic ideas will be loaded here -->
    </div>
  </section>

  <section id="submit" class="border-t-4 border-ink bg-gradient-to-br from-lime-500 via-white to-fuchsia-500">
    <div class="mx-auto max-w-4xl px-6 py-16">
      <div class="rounded-3xl border-4 border-ink bg-white p-8 shadow-vibe">
        <h2 class="font-display text-3xl uppercase tracking-[0.3em] text-ink">Submit a New Idea</h2>
        <p class="mt-2 text-sm text-ink/70">This form posts to the /api/ideas endpoint served by Cloudflare Workers.</p>
        <form class="mt-6 space-y-4" data-endpoint={import.meta.env.PUBLIC_IDEA_ENDPOINT ?? "/api/idea"}>
          <label class="block text-xs font-bold uppercase tracking-[0.3em] text-ink">
            Title
            <input type="text" name="title" required class="mt-2 w-full rounded-xl border-2 border-ink bg-white px-4 py-3" />
          </label>
          <label class="block text-xs font-bold uppercase tracking-[0.3em] text-ink">
            Description
            <textarea name="description" required rows="4" class="mt-2 w-full rounded-xl border-2 border-ink bg-white px-4 py-3"></textarea>
          </label>
          <label class="block text-xs font-bold uppercase tracking-[0.3em] text-ink">
            Categories (comma separated)
            <input type="text" name="categories" class="mt-2 w-full rounded-xl border-2 border-ink bg-white px-4 py-3" />
          </label>
          <button type="submit" class="rounded-full border-4 border-ink bg-fuchsia-500 px-6 py-3 text-xs font-bold uppercase tracking-[0.3em] text-ink">
            Send Idea
          </button>
          <p class="form-status text-xs uppercase tracking-[0.25em] text-ink/60"></p>
        </form>
      </div>
    </div>
  </section>
  <script>
    const form = document.currentScript?.previousElementSibling?.querySelector("form");
    if (form instanceof HTMLFormElement) {
      const status = form.querySelector<HTMLElement>(".form-status");
      form.addEventListener("submit", async (event) => {
        event.preventDefault();
        const endpoint = form.dataset.endpoint ?? "/api/idea";
        const formData = new FormData(form);
        const payload = {
          title: formData.get("title"),
          description: formData.get("description"),
          categories: String(formData.get("categories") ?? "")
            .split(",")
            .map((part) => part.trim())
            .filter(Boolean),
        };

        try {
          const response = await fetch(endpoint, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(payload),
          });
          if (response.ok) {
            const result = await response.json();
            form.reset();
            
            // Show professional success message
            if (status) {
              status.innerHTML = `
                <div class="rounded-xl border-2 border-green-500 bg-green-50 p-4 mt-4">
                  <div class="flex items-center gap-3">
                    <div class="rounded-full bg-green-500 p-1">
                      <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                      </svg>
                    </div>
                    <div>
                      <p class="font-semibold text-green-800 text-sm">Idea Successfully Submitted!</p>
                      <p class="text-green-700 text-xs mt-1">Your idea "${result.title}" is now live. It may take 1-2 minutes to appear in the list due to content moderation and caching.</p>
                    </div>
                  </div>
                </div>
              `;
              
              // Clear message after 8 seconds
              setTimeout(() => {
                if (status) status.innerHTML = "";
              }, 8000);
            }
            
            // Add optimistic idea to the list immediately
            addOptimisticIdea(result);
            
            // Reload ideas after delay to get final state
            setTimeout(loadLiveIdeas, 2000);
          } else {
            if (status) {
              status.innerHTML = `
                <div class="rounded-xl border-2 border-red-500 bg-red-50 p-4 mt-4">
                  <p class="text-red-800 text-sm">‚ö†Ô∏è Submission failed. Please check your connection and try again.</p>
                </div>
              `;
            }
          }
        } catch (error) {
          console.error(error);
          if (status) {
            status.innerHTML = `
              <div class="rounded-xl border-2 border-orange-500 bg-orange-50 p-4 mt-4">
                <p class="text-orange-800 text-sm">üîå Connection issue. Please check your internet and retry.</p>
              </div>
            `;
          }
        }
      });
    }

    // Add optimistic idea immediately after submission
    function addOptimisticIdea(idea) {
      const container = document.getElementById('ideas-container');
      if (!container) return;
      
      // Create optimistic idea HTML with subtle indicator
      const optimisticHTML = `
        <div class="rounded-3xl border-4 border-ink bg-gradient-to-r from-green-50 to-white p-6 shadow-vibe relative" data-optimistic="${idea.id}">
          <div class="absolute top-2 right-2">
            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
              ‚úì Just submitted
            </span>
          </div>
          <div class="flex items-start justify-between gap-4">
            <div class="flex-1">
              <h3 class="font-display text-xl uppercase tracking-[0.3em] text-ink">${idea.title}</h3>
              <p class="mt-2 text-sm text-ink/70">${idea.description}</p>
              <div class="mt-4 flex flex-wrap gap-2">
                ${idea.categories.map(cat => `
                  <span class="rounded-full border border-ink px-3 py-1 text-xs uppercase tracking-[0.25em] text-ink">${cat}</span>
                `).join('')}
              </div>
              <p class="mt-2 text-xs text-green-600">‚è±Ô∏è Processing... May take 1-2 minutes to sync across all users</p>
            </div>
            <button 
              class="group inline-flex items-center gap-2 rounded-full border-4 border-ink bg-white px-4 py-2 text-xs font-bold uppercase tracking-[0.3em] text-ink transition hover:-translate-y-1"
              data-id="${idea.id}"
              data-count="0"
              data-vote-button
              type="button"
            >
              <span class="vote-arrow rounded-full bg-fuchsia-500 px-2 py-1 text-ink transition-transform">‚ñ≤</span>
              <span class="vote-count" aria-live="polite" role="status">0</span>
              <span class="loading-spinner hidden">‚ü≥</span>
            </button>
          </div>
        </div>
      `;
      
      // Remove loading state if it exists
      const loadingState = container.querySelector('.loading-state');
      if (loadingState) loadingState.remove();
      
      // Remove empty state if it exists  
      const emptyState = container.querySelector('.text-center');
      if (emptyState && emptyState.textContent.includes('No Ideas Yet')) {
        emptyState.remove();
      }
      
      // Add to top of list
      container.insertAdjacentHTML('afterbegin', optimisticHTML);
      
      // Re-bind vote buttons
      if (window.hydrateVoteButtons) {
        window.hydrateVoteButtons();
      }
    }

    // Load live ideas from API
    async function loadLiveIdeas() {
      try {
        const [ideasResponse, votesResponse] = await Promise.all([
          fetch('/api/ideas'),
          fetch('/api/votes')
        ]);

        if (ideasResponse.ok && votesResponse.ok) {
          const liveIdeas = await ideasResponse.json();
          const votes = await votesResponse.json();
          
          const container = document.getElementById('ideas-container');
          if (!container) return;
          
          if (liveIdeas.length > 0) {
            // Remove optimistic items that now exist in live data
            document.querySelectorAll('[data-optimistic]').forEach(el => {
              const id = el.getAttribute('data-optimistic');
              if (liveIdeas.find(idea => idea.id === id)) {
                el.remove();
              }
            });
            
            // Generate HTML for live ideas
            container.innerHTML = liveIdeas.map(idea => `
              <div class="rounded-3xl border-4 border-ink bg-white p-6 shadow-vibe">
                <div class="flex items-start justify-between gap-4">
                  <div class="flex-1">
                    <h3 class="font-display text-xl uppercase tracking-[0.3em] text-ink">${idea.title}</h3>
                    <p class="mt-2 text-sm text-ink/70">${idea.description}</p>
                    <div class="mt-4 flex flex-wrap gap-2">
                      ${idea.categories.map(cat => `
                        <span class="rounded-full border border-ink px-3 py-1 text-xs uppercase tracking-[0.25em] text-ink">${cat}</span>
                      `).join('')}
                    </div>
                    <p class="mt-2 text-xs text-ink/50">Submitted: ${new Date(idea.createdAt).toLocaleDateString()}</p>
                  </div>
                  <button 
                    class="group inline-flex items-center gap-2 rounded-full border-4 border-ink bg-white px-4 py-2 text-xs font-bold uppercase tracking-[0.3em] text-ink transition hover:-translate-y-1"
                    data-id="${idea.id}"
                    data-count="${votes[idea.id] || 0}"
                    data-vote-button
                    type="button"
                  >
                    <span class="vote-arrow rounded-full bg-fuchsia-500 px-2 py-1 text-ink transition-transform">‚ñ≤</span>
                    <span class="vote-count" aria-live="polite" role="status">${votes[idea.id] || 0}</span>
                    <span class="loading-spinner hidden">‚ü≥</span>
                  </button>
                </div>
              </div>
            `).join('');

            // Re-bind vote buttons for new content
            if (window.hydrateVoteButtons) {
              window.hydrateVoteButtons();
            }
          } else {
            // Show empty state
            container.innerHTML = `
              <div class="text-center py-12">
                <div class="rounded-3xl border-4 border-dashed border-ink bg-white p-8">
                  <h3 class="font-display text-xl uppercase tracking-[0.3em] text-ink">No Ideas Yet</h3>
                  <p class="mt-2 text-sm text-ink/70">Be the first to submit an idea below!</p>
                  <button onclick="document.getElementById('submit').scrollIntoView({behavior: 'smooth'})" 
                          class="mt-4 rounded-full border-4 border-ink bg-lime-500 px-6 py-3 text-xs font-bold uppercase tracking-[0.3em] text-ink">
                    Submit First Idea
                  </button>
                </div>
              </div>
            `;
          }
        }
      } catch (error) {
        console.error('Failed to load live ideas:', error);
      }
    }

    // Load live data on page load
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', loadLiveIdeas);
    } else {
      loadLiveIdeas();
    }
  </script>
</BaseLayout>
